name: Build and Deploy Documentation

on:
  workflow_dispatch:  # Manual trigger
  push:
    paths:
      - 'docs/**'
      - 'tbsim/**'
      - '.github/workflows/deploy-docs.yml'
  pull_request:
    branches:
      - main
      - docs-pages
    paths:
      - 'docs/**'
      - 'tbsim/**'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Install tbsim package
        run: |
          pip install -e .
          pip freeze

      - name: Install documentation dependencies
        working-directory: ./docs
        run: |
          pip install -r requirements.txt
          pip freeze
      
      - name: Clean existing build
        working-directory: ./docs
        run: |
          rm -rf _build
          rm -rf _site
          find . -name "*.pyc" -delete
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
  
      - name: Setup Python kernel for notebooks
        working-directory: ./docs
        run: |
          python -c "import tbsim; print('TBSim imported successfully')"
      
      - name: Verify Furo theme configuration
        run: python .github/scripts/verify_docs.py
  
      - name: Build documentation with Sphinx
        working-directory: ./docs
        run: |
          # First try to build with warnings as errors
          make html SPHINXOPTS="-W --keep-going" || {
            echo "Build with warnings as errors failed, attempting to build without warnings as errors..."
            make html SPHINXOPTS="--keep-going"
          }
      - name: Verify Binder configuration
        run: python .github/scripts/verify_binder.py

      - name: Verify build output
        working-directory: ./docs
        run: python ../.github/scripts/verify_build.py

      - name: Test tutorial functionality
        run: |
          cd docs
          python ../.github/scripts/test_tutorial_imports.py

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/
          retention-days: 30

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/docs-pages' || contains(github.event.head_commit.message, 'build-docs=True')
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/

      - name: Verify downloaded artifacts
        run: |
          echo "=== Verifying downloaded artifacts ==="
          ls -la docs/_build/html/
          if [ -f "docs/_build/html/index.html" ]; then
            echo "     index.html found in downloaded artifacts!"
            ls -la docs/_build/html/index.html
          else
            echo "     index.html not found in downloaded artifacts!"
            echo "Available files:"
            ls -la docs/_build/html/
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Print deployment URL
        run: |
          echo " Documentation deployed successfully!"
          echo " Documentation URL: ${{ steps.deployment.outputs.page_url }}"
          echo " GitHub Pages URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          
          # Store URL for potential use in other steps
          echo "DEPLOYMENT_URL=${{ steps.deployment.outputs.page_url }}" >> $GITHUB_ENV
          echo "GITHUB_PAGES_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_ENV

  build-preview:
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, 'build-docs=True')
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/

      - name: Upload preview artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation-preview
          path: docs/_build/html/
          retention-days: 7
